using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "504be52c69f5de8")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1054 with alias "basePage"
	/// <summary>BasePage</summary>
	public partial interface IBasePage : IPublishedContent
	{
		/// <summary>Breadcrumb</summary>
		string Breadcrumb { get; }

		/// <summary>Displayname</summary>
		string Displayname { get; }

		/// <summary>Hide in XML Sitemap</summary>
		bool HideInXmlsitemap { get; }

		/// <summary>icon</summary>
		object Icon { get; }

		/// <summary>Intro</summary>
		string Intro { get; }

		/// <summary>metadata</summary>
		Epiphany.SeoMetadata.SeoMetadata Metadata { get; }

		/// <summary>Page Class</summary>
		string PageClass { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }

		/// <summary>Title image</summary>
		IPublishedContent TitleImage { get; }
	}

	/// <summary>BasePage</summary>
	[PublishedContentModel("basePage")]
	public partial class BasePage : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "basePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BasePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BasePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb: Value for the breadcrumb
		///</summary>
		[ImplementPropertyType("breadcrumb")]
		public string Breadcrumb
		{
			get { return GetBreadcrumb(this); }
		}

		/// <summary>Static getter for Breadcrumb</summary>
		public static string GetBreadcrumb(IBasePage that) { return that.GetPropertyValue<string>("breadcrumb"); }

		///<summary>
		/// Displayname: How this page is represented in the navigation
		///</summary>
		[ImplementPropertyType("displayname")]
		public string Displayname
		{
			get { return GetDisplayname(this); }
		}

		/// <summary>Static getter for Displayname</summary>
		public static string GetDisplayname(IBasePage that) { return that.GetPropertyValue<string>("displayname"); }

		///<summary>
		/// Hide in XML Sitemap
		///</summary>
		[ImplementPropertyType("hideInXMLSitemap")]
		public bool HideInXmlsitemap
		{
			get { return GetHideInXmlsitemap(this); }
		}

		/// <summary>Static getter for Hide in XML Sitemap</summary>
		public static bool GetHideInXmlsitemap(IBasePage that) { return that.GetPropertyValue<bool>("hideInXMLSitemap"); }

		///<summary>
		/// icon: Icon to display on frontend
		///</summary>
		[ImplementPropertyType("icon")]
		public object Icon
		{
			get { return GetIcon(this); }
		}

		/// <summary>Static getter for icon</summary>
		public static object GetIcon(IBasePage that) { return that.GetPropertyValue("icon"); }

		///<summary>
		/// Intro: Korte inleiding, wordt getoond op de homepagina en op overzichtspagina's
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return GetIntro(this); }
		}

		/// <summary>Static getter for Intro</summary>
		public static string GetIntro(IBasePage that) { return that.GetPropertyValue<string>("intro"); }

		///<summary>
		/// metadata
		///</summary>
		[ImplementPropertyType("metadata")]
		public Epiphany.SeoMetadata.SeoMetadata Metadata
		{
			get { return GetMetadata(this); }
		}

		/// <summary>Static getter for metadata</summary>
		public static Epiphany.SeoMetadata.SeoMetadata GetMetadata(IBasePage that) { return that.GetPropertyValue<Epiphany.SeoMetadata.SeoMetadata>("metadata"); }

		///<summary>
		/// Page Class: CSS Classname - DO NOT CHANGE !! (unless you know what you are doing, of course)
		///</summary>
		[ImplementPropertyType("pageClass")]
		public string PageClass
		{
			get { return GetPageClass(this); }
		}

		/// <summary>Static getter for Page Class</summary>
		public static string GetPageClass(IBasePage that) { return that.GetPropertyValue<string>("pageClass"); }

		///<summary>
		/// Page Title: Title of the page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(IBasePage that) { return that.GetPropertyValue<string>("pageTitle"); }

		///<summary>
		/// Title image: Page Banner. Wordt getoond bovenaan de pagina (volledige breedte), of op een overzichtspagina (verkleind). Minimum 1920px breedte op 220px hoog
		///</summary>
		[ImplementPropertyType("titleImage")]
		public IPublishedContent TitleImage
		{
			get { return GetTitleImage(this); }
		}

		/// <summary>Static getter for Title image</summary>
		public static IPublishedContent GetTitleImage(IBasePage that) { return that.GetPropertyValue<IPublishedContent>("titleImage"); }
	}

	/// <summary>SponsorBlock</summary>
	[PublishedContentModel("sponsor")]
	public partial class Sponsor : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sponsor";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Sponsor(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Sponsor, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Adres: Adres info
		///</summary>
		[ImplementPropertyType("adres")]
		public Archetype.Models.ArchetypeModel Adres
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("adres"); }
		}

		///<summary>
		/// Logo: Logo of sponsor
		///</summary>
		[ImplementPropertyType("logo")]
		public IPublishedContent Logo
		{
			get { return this.GetPropertyValue<IPublishedContent>("logo"); }
		}

		///<summary>
		/// Naam
		///</summary>
		[ImplementPropertyType("naam")]
		public string Naam
		{
			get { return this.GetPropertyValue<string>("naam"); }
		}

		///<summary>
		/// Website: Website
		///</summary>
		[ImplementPropertyType("website")]
		public Archetype.Models.ArchetypeModel Website
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("website"); }
		}
	}

	/// <summary>Over ons</summary>
	[PublishedContentModel("overOns")]
	public partial class OverOns : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "overOns";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public OverOns(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<OverOns, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contact info: Contactgegevens van de vereniging
		///</summary>
		[ImplementPropertyType("adres")]
		public Archetype.Models.ArchetypeModel Adres
		{
			get { return this.GetPropertyValue<Archetype.Models.ArchetypeModel>("adres"); }
		}

		///<summary>
		/// Over ons - Footer: Text to display in Website footer. This wil appear on every page of the website. Text should not be longer then 256 characters
		///</summary>
		[ImplementPropertyType("overOnsFooter")]
		public string OverOnsFooter
		{
			get { return this.GetPropertyValue<string>("overOnsFooter"); }
		}

		///<summary>
		/// Subpages: List up pages for display in navigation
		///</summary>
		[ImplementPropertyType("subpages")]
		public IEnumerable<IPublishedContent> Subpages
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("subpages"); }
		}
	}

	/// <summary>BaseContentBlock</summary>
	[PublishedContentModel("baseContentBlock")]
	public partial class BaseContentBlock : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "baseContentBlock";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BaseContentBlock(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BaseContentBlock, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Content: Full Body text
		///</summary>
		[ImplementPropertyType("bodyContent")]
		public IHtmlString BodyContent
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyContent"); }
		}

		///<summary>
		/// Intro: Short text, for an overview page
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return this.GetPropertyValue<string>("intro"); }
		}

		///<summary>
		/// Subtitle
		///</summary>
		[ImplementPropertyType("subtitle")]
		public string Subtitle
		{
			get { return this.GetPropertyValue<string>("subtitle"); }
		}

		///<summary>
		/// Title: Content block title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}
	}

	/// <summary>SponsorsPage</summary>
	[PublishedContentModel("sponsorsPage")]
	public partial class SponsorsPage : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sponsorsPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SponsorsPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SponsorsPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>HomePage</summary>
	[PublishedContentModel("homePage")]
	public partial class HomePage : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Footer Block 1: Sitenavigation items displayed in footer - Left Top block
		///</summary>
		[ImplementPropertyType("footerBlock1")]
		public IEnumerable<IPublishedContent> FooterBlock1
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("footerBlock1"); }
		}

		///<summary>
		/// Footer Block 1 title
		///</summary>
		[ImplementPropertyType("footerBlock1Title")]
		public string FooterBlock1Title
		{
			get { return this.GetPropertyValue<string>("footerBlock1Title"); }
		}

		///<summary>
		/// Footer Block 2: Sitenavigation items displayed in footer - Left Bottom block
		///</summary>
		[ImplementPropertyType("footerBlock2")]
		public IEnumerable<IPublishedContent> FooterBlock2
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("footerBlock2"); }
		}

		///<summary>
		/// Footer Block  2 title
		///</summary>
		[ImplementPropertyType("footerBlock2Title")]
		public string FooterBlock2Title
		{
			get { return this.GetPropertyValue<string>("footerBlock2Title"); }
		}

		///<summary>
		/// Footer Block 3: Sitenavigation items displayed in footer - Right Top block
		///</summary>
		[ImplementPropertyType("footerBlock3")]
		public IEnumerable<IPublishedContent> FooterBlock3
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("footerBlock3"); }
		}

		///<summary>
		/// Footer Block 3 title
		///</summary>
		[ImplementPropertyType("footerBlock3Title")]
		public string FooterBlock3Title
		{
			get { return this.GetPropertyValue<string>("footerBlock3Title"); }
		}

		///<summary>
		/// Footer Block 4: Sitenavigation items displayed in footer - Right Bottom Block
		///</summary>
		[ImplementPropertyType("footerBlock4")]
		public IEnumerable<IPublishedContent> FooterBlock4
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("footerBlock4"); }
		}

		///<summary>
		/// Footer Block 4 title
		///</summary>
		[ImplementPropertyType("footerBlock4Title")]
		public string FooterBlock4Title
		{
			get { return this.GetPropertyValue<string>("footerBlock4Title"); }
		}

		///<summary>
		/// Main Navigation: Hoofdnavigatie
		///</summary>
		[ImplementPropertyType("mainNavigation")]
		public IEnumerable<IPublishedContent> MainNavigation
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("mainNavigation"); }
		}

		///<summary>
		/// Over ons - Content Blocks: Content Blocks To show on homepage
		///</summary>
		[ImplementPropertyType("overOnsContentBlocks")]
		public IEnumerable<IPublishedContent> OverOnsContentBlocks
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("overOnsContentBlocks"); }
		}

		///<summary>
		/// OverOns-Display: Toon dit block op de homepage
		///</summary>
		[ImplementPropertyType("overOnsDisplay")]
		public bool OverOnsDisplay
		{
			get { return this.GetPropertyValue<bool>("overOnsDisplay"); }
		}

		///<summary>
		/// Over ons - Image: Afbeelding voor de homepage. 1920px x 460px
		///</summary>
		[ImplementPropertyType("overOnsImage")]
		public IPublishedContent OverOnsImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("overOnsImage"); }
		}

		///<summary>
		/// SecondLevel Navigation: Secondair Menu (Rechts bovenaan de pagina)
		///</summary>
		[ImplementPropertyType("secondLevelNavigation")]
		public IEnumerable<IPublishedContent> SecondLevelNavigation
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("secondLevelNavigation"); }
		}
	}

	/// <summary>Basic Content Page</summary>
	[PublishedContentModel("basicContentPage")]
	public partial class BasicContentPage : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "basicContentPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BasicContentPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BasicContentPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Tekst: Content voor deze pagina
		///</summary>
		[ImplementPropertyType("bodyTekst")]
		public IHtmlString BodyTekst
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyTekst"); }
		}
	}

	/// <summary>Articulate</summary>
	[PublishedContentModel("Articulate")]
	public partial class Articulate : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Articulate";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Articulate(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Articulate, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Blog Banner: Optional blog banner
		///</summary>
		[ImplementPropertyType("blogBanner")]
		public Umbraco.Web.Models.ImageCropDataSet BlogBanner
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("blogBanner"); }
		}

		///<summary>
		/// Blog Description
		///</summary>
		[ImplementPropertyType("blogDescription")]
		public string BlogDescription
		{
			get { return this.GetPropertyValue<string>("blogDescription"); }
		}

		///<summary>
		/// Blog Logo: Optional logo
		///</summary>
		[ImplementPropertyType("blogLogo")]
		public Umbraco.Web.Models.ImageCropDataSet BlogLogo
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("blogLogo"); }
		}

		///<summary>
		/// Blog Title
		///</summary>
		[ImplementPropertyType("blogTitle")]
		public string BlogTitle
		{
			get { return this.GetPropertyValue<string>("blogTitle"); }
		}

		///<summary>
		/// Categories Page Name: The page title for the categories listing
		///</summary>
		[ImplementPropertyType("categoriesPageName")]
		public string CategoriesPageName
		{
			get { return this.GetPropertyValue<string>("categoriesPageName"); }
		}

		///<summary>
		/// Categories Url Name
		///</summary>
		[ImplementPropertyType("categoriesUrlName")]
		public string CategoriesUrlName
		{
			get { return this.GetPropertyValue<string>("categoriesUrlName"); }
		}

		///<summary>
		/// Custom RSS Feed Url: Optional custom rss feed URL (i.e. if you use feedburner, etc...)
		///</summary>
		[ImplementPropertyType("customRssFeedUrl")]
		public string CustomRssFeedUrl
		{
			get { return this.GetPropertyValue<string>("customRssFeedUrl"); }
		}

		///<summary>
		/// Display Name: Weergave in navigatie
		///</summary>
		[ImplementPropertyType("displayName")]
		public string DisplayName
		{
			get { return this.GetPropertyValue<string>("displayName"); }
		}

		///<summary>
		/// Disqus Shortname
		///</summary>
		[ImplementPropertyType("disqusShortname")]
		public string DisqusShortname
		{
			get { return this.GetPropertyValue<string>("disqusShortname"); }
		}

		///<summary>
		/// Extract First Image to Property: When Windows Live Writer (or compatible WebBlog API tool) is used to create blog posts, with this option enabled it will set the first image found in the blog post to the blog's image property if one is found.
		///</summary>
		[ImplementPropertyType("extractFirstImage")]
		public bool ExtractFirstImage
		{
			get { return this.GetPropertyValue<bool>("extractFirstImage"); }
		}

		///<summary>
		/// Google Analytics Id: Your Google Analytics Id (i.e. UA-123456789 )
		///</summary>
		[ImplementPropertyType("googleAnalyticsId")]
		public string GoogleAnalyticsId
		{
			get { return this.GetPropertyValue<string>("googleAnalyticsId"); }
		}

		///<summary>
		/// Google Analytics Name: The site name associated with your Google Analytics (i.e. mysite.com )
		///</summary>
		[ImplementPropertyType("googleAnalyticsName")]
		public string GoogleAnalyticsName
		{
			get { return this.GetPropertyValue<string>("googleAnalyticsName"); }
		}

		///<summary>
		/// icon
		///</summary>
		[ImplementPropertyType("icon")]
		public object Icon
		{
			get { return this.GetPropertyValue("icon"); }
		}

		///<summary>
		/// PageSize
		///</summary>
		[ImplementPropertyType("pageSize")]
		public int PageSize
		{
			get { return this.GetPropertyValue<int>("pageSize"); }
		}

		///<summary>
		/// Search Page Name: The page title for the search results
		///</summary>
		[ImplementPropertyType("searchPageName")]
		public string SearchPageName
		{
			get { return this.GetPropertyValue<string>("searchPageName"); }
		}

		///<summary>
		/// Search Url Name
		///</summary>
		[ImplementPropertyType("searchUrlName")]
		public string SearchUrlName
		{
			get { return this.GetPropertyValue<string>("searchUrlName"); }
		}

		///<summary>
		/// Tags Page Name: The page title for the tags listing
		///</summary>
		[ImplementPropertyType("tagsPageName")]
		public string TagsPageName
		{
			get { return this.GetPropertyValue<string>("tagsPageName"); }
		}

		///<summary>
		/// Tags Url Name
		///</summary>
		[ImplementPropertyType("tagsUrlName")]
		public string TagsUrlName
		{
			get { return this.GetPropertyValue<string>("tagsUrlName"); }
		}

		///<summary>
		/// Theme
		///</summary>
		[ImplementPropertyType("theme")]
		public object Theme
		{
			get { return this.GetPropertyValue("theme"); }
		}
	}

	/// <summary>Articulate Archive</summary>
	[PublishedContentModel("ArticulateArchive")]
	public partial class ArticulateArchive : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulateArchive";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulateArchive(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulateArchive, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Umbraco Url Name: The Umbraco Url Name for this node, this will be the prefix URL for each blog post
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return this.GetPropertyValue<string>("umbracoUrlName"); }
		}
	}

	/// <summary>Articulate Author</summary>
	[PublishedContentModel("ArticulateAuthor")]
	public partial class ArticulateAuthor : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulateAuthor";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulateAuthor(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulateAuthor, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author Bio: Description of the author
		///</summary>
		[ImplementPropertyType("authorBio")]
		public string AuthorBio
		{
			get { return this.GetPropertyValue<string>("authorBio"); }
		}

		///<summary>
		/// Author Image
		///</summary>
		[ImplementPropertyType("authorImage")]
		public Umbraco.Web.Models.ImageCropDataSet AuthorImage
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("authorImage"); }
		}

		///<summary>
		/// Author Url: A url to link to the author's website
		///</summary>
		[ImplementPropertyType("authorUrl")]
		public string AuthorUrl
		{
			get { return this.GetPropertyValue<string>("authorUrl"); }
		}
	}

	/// <summary>Articulate Authors</summary>
	[PublishedContentModel("ArticulateAuthors")]
	public partial class ArticulateAuthors : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulateAuthors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulateAuthors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulateAuthors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Articulate Post</summary>
	[PublishedContentModel("ArticulatePost")]
	public partial class ArticulatePost : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulatePost";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulatePost(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulatePost, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("author")]
		public string Author
		{
			get { return this.GetPropertyValue<string>("author"); }
		}

		///<summary>
		/// Categories
		///</summary>
		[ImplementPropertyType("categories")]
		public IEnumerable<string> Categories
		{
			get { return this.GetPropertyValue<IEnumerable<string>>("categories"); }
		}

		///<summary>
		/// Enable Comments
		///</summary>
		[ImplementPropertyType("enableComments")]
		public bool EnableComments
		{
			get { return this.GetPropertyValue<bool>("enableComments"); }
		}

		///<summary>
		/// Excerpt: Korte inhoud
		///</summary>
		[ImplementPropertyType("excerpt")]
		public string Excerpt
		{
			get { return this.GetPropertyValue<string>("excerpt"); }
		}

		///<summary>
		/// Import Id: Used during a blogml import process to ensure that re-importing does not create duplicate posts.
		///</summary>
		[ImplementPropertyType("importId")]
		public string ImportId
		{
			get { return this.GetPropertyValue<string>("importId"); }
		}

		///<summary>
		/// Post Image: An optional image for your blog post
		///</summary>
		[ImplementPropertyType("postImage")]
		public Umbraco.Web.Models.ImageCropDataSet PostImage
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("postImage"); }
		}

		///<summary>
		/// Published Date: This is the date that the document will be shown as published on your website
		///</summary>
		[ImplementPropertyType("publishedDate")]
		public DateTime PublishedDate
		{
			get { return this.GetPropertyValue<DateTime>("publishedDate"); }
		}

		///<summary>
		/// Tags
		///</summary>
		[ImplementPropertyType("tags")]
		public IEnumerable<string> Tags
		{
			get { return this.GetPropertyValue<IEnumerable<string>>("tags"); }
		}

		///<summary>
		/// umbracoUrlAlias
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return this.GetPropertyValue<string>("umbracoUrlAlias"); }
		}

		///<summary>
		/// Slug: If left blank then umbraco will auto-generate the URL name based on the node name
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return this.GetPropertyValue<string>("umbracoUrlName"); }
		}
	}

	/// <summary>Articulate Markdown</summary>
	[PublishedContentModel("ArticulateMarkdown")]
	public partial class ArticulateMarkdown : ArticulatePost
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulateMarkdown";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulateMarkdown(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulateMarkdown, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Markdown
		///</summary>
		[ImplementPropertyType("markdown")]
		public object Markdown
		{
			get { return this.GetPropertyValue("markdown"); }
		}
	}

	/// <summary>Articulate Rich Text</summary>
	[PublishedContentModel("ArticulateRichText")]
	public partial class ArticulateRichText : ArticulatePost
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ArticulateRichText";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ArticulateRichText(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ArticulateRichText, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Rich Text
		///</summary>
		[ImplementPropertyType("richText")]
		public IHtmlString RichText
		{
			get { return this.GetPropertyValue<IHtmlString>("richText"); }
		}
	}

	/// <summary>MagazineRoot</summary>
	[PublishedContentModel("magazineRoot")]
	public partial class MagazineRoot : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "magazineRoot";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MagazineRoot(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MagazineRoot, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cover recentste nummer
		///</summary>
		[ImplementPropertyType("coverRecentsteNummer")]
		public IPublishedContent CoverRecentsteNummer
		{
			get { return this.GetPropertyValue<IPublishedContent>("coverRecentsteNummer"); }
		}

		///<summary>
		/// Huidige jaargang: Kalenderjaar van huidige jaargang
		///</summary>
		[ImplementPropertyType("huidigeJaargang")]
		public int HuidigeJaargang
		{
			get { return this.GetPropertyValue<int>("huidigeJaargang"); }
		}

		///<summary>
		/// Subpages: Subpages to show in navigation block
		///</summary>
		[ImplementPropertyType("subpages")]
		public IEnumerable<IPublishedContent> Subpages
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("subpages"); }
		}
	}

	/// <summary>MagazineNummer</summary>
	[PublishedContentModel("magazineNummer")]
	public partial class MagazineNummer : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "magazineNummer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MagazineNummer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MagazineNummer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Cover Image: Cover van het  nummer
		///</summary>
		[ImplementPropertyType("coverImage")]
		public IPublishedContent CoverImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("coverImage"); }
		}

		///<summary>
		/// In dit nummer: Teaser info over ProFFF nummer
		///</summary>
		[ImplementPropertyType("inDitNummer")]
		public IHtmlString InDitNummer
		{
			get { return this.GetPropertyValue<IHtmlString>("inDitNummer"); }
		}
	}

	/// <summary>StudiedagRoot</summary>
	[PublishedContentModel("studiedagRoot")]
	public partial class StudiedagRoot : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "studiedagRoot";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StudiedagRoot(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StudiedagRoot, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Ateliers Counter
		///</summary>
		[ImplementPropertyType("ateliersCounter")]
		public string AteliersCounter
		{
			get { return this.GetPropertyValue<string>("ateliersCounter"); }
		}

		///<summary>
		/// Bezoekers Counter: Aantal bezoekers vorige editie
		///</summary>
		[ImplementPropertyType("bezoekersCounter")]
		public int BezoekersCounter
		{
			get { return this.GetPropertyValue<int>("bezoekersCounter"); }
		}

		///<summary>
		/// Locatie Counter: Aantal locaties
		///</summary>
		[ImplementPropertyType("locatieCounter")]
		public int LocatieCounter
		{
			get { return this.GetPropertyValue<int>("locatieCounter"); }
		}

		///<summary>
		/// Sprekers Counter: Aantal sprekers
		///</summary>
		[ImplementPropertyType("sprekersCounter")]
		public int SprekersCounter
		{
			get { return this.GetPropertyValue<int>("sprekersCounter"); }
		}

		///<summary>
		/// Subpages: If this page is added to the main navigation, it can show a list of pages in a dropdown. Add them here.
		///</summary>
		[ImplementPropertyType("subpages")]
		public IEnumerable<IPublishedContent> Subpages
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("subpages"); }
		}
	}

	/// <summary>Studiedag Atelier</summary>
	[PublishedContentModel("studiedagAtelier")]
	public partial class StudiedagAtelier : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "studiedagAtelier";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StudiedagAtelier(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StudiedagAtelier, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Aantal plaatsen: Hoeveel plaatsen zijn er beschikbaar voor dit atelier
		///</summary>
		[ImplementPropertyType("aantalPlaatsen")]
		public int AantalPlaatsen
		{
			get { return this.GetPropertyValue<int>("aantalPlaatsen"); }
		}

		///<summary>
		/// Atelier Titel: Titel van het atelier
		///</summary>
		[ImplementPropertyType("atelierTitel")]
		public string AtelierTitel
		{
			get { return this.GetPropertyValue<string>("atelierTitel"); }
		}

		///<summary>
		/// Beschrijving: Korte beschrijving
		///</summary>
		[ImplementPropertyType("beschrijving")]
		public string Beschrijving
		{
			get { return this.GetPropertyValue<string>("beschrijving"); }
		}

		///<summary>
		/// Doelgroep: Voor wie is dit atelier bestemd?
		///</summary>
		[ImplementPropertyType("doelgroep")]
		public string Doelgroep
		{
			get { return this.GetPropertyValue<string>("doelgroep"); }
		}

		///<summary>
		/// End hour: Einde van het atelier
		///</summary>
		[ImplementPropertyType("endHour")]
		public DateTime EndHour
		{
			get { return this.GetPropertyValue<DateTime>("endHour"); }
		}

		///<summary>
		/// Group: In what timeblock is this atelier. For organizational purposes only.
		///</summary>
		[ImplementPropertyType("group")]
		public int Group
		{
			get { return this.GetPropertyValue<int>("group"); }
		}

		///<summary>
		/// Is een herhaling
		///</summary>
		[ImplementPropertyType("isEenHerhaling")]
		public bool IsEenHerhaling
		{
			get { return this.GetPropertyValue<bool>("isEenHerhaling"); }
		}

		///<summary>
		/// Is volzet: Is het atelier volzet?
		///</summary>
		[ImplementPropertyType("isVolzet")]
		public bool IsVolzet
		{
			get { return this.GetPropertyValue<bool>("isVolzet"); }
		}

		///<summary>
		/// jaar
		///</summary>
		[ImplementPropertyType("jaar")]
		public int Jaar
		{
			get { return this.GetPropertyValue<int>("jaar"); }
		}

		///<summary>
		/// Met de steun van
		///</summary>
		[ImplementPropertyType("metDeSteunVan")]
		public string MetDeSteunVan
		{
			get { return this.GetPropertyValue<string>("metDeSteunVan"); }
		}

		///<summary>
		/// Naam: Voornaam en naam van de spreker
		///</summary>
		[ImplementPropertyType("naam")]
		public string Naam
		{
			get { return this.GetPropertyValue<string>("naam"); }
		}

		///<summary>
		/// Nummer: Atelier nummer
		///</summary>
		[ImplementPropertyType("nummer")]
		public int Nummer
		{
			get { return this.GetPropertyValue<int>("nummer"); }
		}

		///<summary>
		/// Spreker Info: Additional info over de spreker
		///</summary>
		[ImplementPropertyType("sprekerInfo")]
		public string SprekerInfo
		{
			get { return this.GetPropertyValue<string>("sprekerInfo"); }
		}

		///<summary>
		/// Start hour: Begin van het atelier
		///</summary>
		[ImplementPropertyType("startHour")]
		public DateTime StartHour
		{
			get { return this.GetPropertyValue<DateTime>("startHour"); }
		}

		///<summary>
		/// Type: Type atelier
		///</summary>
		[ImplementPropertyType("type")]
		public string Type
		{
			get { return this.GetPropertyValue<string>("type"); }
		}
	}

	/// <summary>Studiedag - Locatie</summary>
	[PublishedContentModel("basicContentPage11")]
	public partial class BasicContentPage11 : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "basicContentPage11";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BasicContentPage11(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BasicContentPage11, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Tekst: Content voor deze pagina
		///</summary>
		[ImplementPropertyType("bodyTekst")]
		public IHtmlString BodyTekst
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyTekst"); }
		}

		///<summary>
		/// Breadcrumb: Value for the breadcrumb
		///</summary>
		[ImplementPropertyType("breadcrumb")]
		public string Breadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetBreadcrumb(this); }
		}

		///<summary>
		/// Displayname: How this page is represented in the navigation
		///</summary>
		[ImplementPropertyType("displayname")]
		public string Displayname
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetDisplayname(this); }
		}

		///<summary>
		/// Hide in XML Sitemap
		///</summary>
		[ImplementPropertyType("hideInXMLSitemap")]
		public bool HideInXmlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetHideInXmlsitemap(this); }
		}

		///<summary>
		/// icon: Icon to display on frontend
		///</summary>
		[ImplementPropertyType("icon")]
		public object Icon
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetIcon(this); }
		}

		///<summary>
		/// Intro: Korte inleiding, wordt getoond op de homepagina en op overzichtspagina's
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetIntro(this); }
		}

		///<summary>
		/// metadata
		///</summary>
		[ImplementPropertyType("metadata")]
		public Epiphany.SeoMetadata.SeoMetadata Metadata
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetMetadata(this); }
		}

		///<summary>
		/// Page Class: CSS Classname - DO NOT CHANGE !! (unless you know what you are doing, of course)
		///</summary>
		[ImplementPropertyType("pageClass")]
		public string PageClass
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetPageClass(this); }
		}

		///<summary>
		/// Page Title: Title of the page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetPageTitle(this); }
		}

		///<summary>
		/// Title image: Page Banner. Wordt getoond bovenaan de pagina (volledige breedte), of op een overzichtspagina (verkleind). Minimum 1920px breedte op 220px hoog
		///</summary>
		[ImplementPropertyType("titleImage")]
		public IPublishedContent TitleImage
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetTitleImage(this); }
		}
	}

	/// <summary>StudiedagProgrammaRoot</summary>
	[PublishedContentModel("studiedagProgrammaRoot")]
	public partial class StudiedagProgrammaRoot : PublishedContentModel, IBasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "studiedagProgrammaRoot";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StudiedagProgrammaRoot(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StudiedagProgrammaRoot, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Breadcrumb: Value for the breadcrumb
		///</summary>
		[ImplementPropertyType("breadcrumb")]
		public string Breadcrumb
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetBreadcrumb(this); }
		}

		///<summary>
		/// Displayname: How this page is represented in the navigation
		///</summary>
		[ImplementPropertyType("displayname")]
		public string Displayname
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetDisplayname(this); }
		}

		///<summary>
		/// Hide in XML Sitemap
		///</summary>
		[ImplementPropertyType("hideInXMLSitemap")]
		public bool HideInXmlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetHideInXmlsitemap(this); }
		}

		///<summary>
		/// icon: Icon to display on frontend
		///</summary>
		[ImplementPropertyType("icon")]
		public object Icon
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetIcon(this); }
		}

		///<summary>
		/// Intro: Korte inleiding, wordt getoond op de homepagina en op overzichtspagina's
		///</summary>
		[ImplementPropertyType("intro")]
		public string Intro
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetIntro(this); }
		}

		///<summary>
		/// metadata
		///</summary>
		[ImplementPropertyType("metadata")]
		public Epiphany.SeoMetadata.SeoMetadata Metadata
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetMetadata(this); }
		}

		///<summary>
		/// Page Class: CSS Classname - DO NOT CHANGE !! (unless you know what you are doing, of course)
		///</summary>
		[ImplementPropertyType("pageClass")]
		public string PageClass
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetPageClass(this); }
		}

		///<summary>
		/// Page Title: Title of the page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetPageTitle(this); }
		}

		///<summary>
		/// Title image: Page Banner. Wordt getoond bovenaan de pagina (volledige breedte), of op een overzichtspagina (verkleind). Minimum 1920px breedte op 220px hoog
		///</summary>
		[ImplementPropertyType("titleImage")]
		public IPublishedContent TitleImage
		{
			get { return Umbraco.Web.PublishedContentModels.BasePage.GetTitleImage(this); }
		}
	}

	/// <summary>ContactUs</summary>
	[PublishedContentModel("contactUs")]
	public partial class ContactUs : BasePage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Banner</summary>
	[PublishedContentModel("banner")]
	public partial class Banner : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "banner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Banner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Banner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Background image
		///</summary>
		[ImplementPropertyType("bannerBackgroundImage")]
		public IPublishedContent BannerBackgroundImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("bannerBackgroundImage"); }
		}

		///<summary>
		/// Banner description: Copy on banner
		///</summary>
		[ImplementPropertyType("bannerDescription")]
		public string BannerDescription
		{
			get { return this.GetPropertyValue<string>("bannerDescription"); }
		}

		///<summary>
		/// Banner Target Link: Targetpage behind link
		///</summary>
		[ImplementPropertyType("bannerTargetLink")]
		public IPublishedContent BannerTargetLink
		{
			get { return this.GetPropertyValue<IPublishedContent>("bannerTargetLink"); }
		}

		///<summary>
		/// Banner Title: Titel op banner
		///</summary>
		[ImplementPropertyType("bannerTitle")]
		public string BannerTitle
		{
			get { return this.GetPropertyValue<string>("bannerTitle"); }
		}
	}

	/// <summary>FullWidthBanner</summary>
	[PublishedContentModel("fullWidthBanner")]
	public partial class FullWidthBanner : Banner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fullWidthBanner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FullWidthBanner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FullWidthBanner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>DataRoot</summary>
	[PublishedContentModel("dataRoot")]
	public partial class DataRoot : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "dataRoot";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DataRoot(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DataRoot, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Banner Folder</summary>
	[PublishedContentModel("bannerFolder")]
	public partial class BannerFolder : DataRoot
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bannerFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BannerFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BannerFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>XmlSitemap</summary>
	[PublishedContentModel("xmlSitemap")]
	public partial class XmlSitemap : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "xmlSitemap";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public XmlSitemap(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<XmlSitemap, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
